{"ast":null,"code":"import axios from \"axios\";\nimport baseURL from \"./config.js\";\nimport { NotificationContainer, NotificationManager } from \"react-notifications\";\nconsole.log(baseURL);\nconst token = window.localStorage.getItem(\"token\");\nlet t = token ? token.substring(0, 15) : null;\nconsole.log(\"TOKEN\", t, \"NODE_ENV\", process.env.NODE_ENV);\n\nlet resetHead = () => {\n  return {\n    headers: {\n      Authorization: `Bearer ${window.localStorage.getItem(\"token\")}`\n    }\n  };\n};\n\nconst API = axios.create({\n  withCredentials: true,\n  baseURL,\n  headers: {\n    Authorization: `Bearer ${token}`\n  }\n});\nconst actions = {\n  getAllMyEvents: async () => {\n    return await API.get(`/getAllEvents`, resetHead());\n  },\n  getUser: async () => {\n    return await API.get(`/user`, resetHead());\n  },\n  signUp: async user => {\n    var _res$data;\n\n    let res = await API.post(\"/signup\", user, resetHead());\n    window.localStorage.setItem(\"token\", res === null || res === void 0 ? void 0 : (_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.token);\n    return res;\n  },\n  logIn: async user => {\n    var _res$data2;\n\n    let res = await API.post(\"/login\", user, resetHead());\n    window.localStorage.setItem(\"token\", res === null || res === void 0 ? void 0 : (_res$data2 = res.data) === null || _res$data2 === void 0 ? void 0 : _res$data2.token);\n    return res;\n  },\n  logOut: async () => {\n    window.localStorage.removeItem(\"token\");\n    return await API.get(\"/logout\", resetHead());\n  },\n  addapost: async data => {\n    return await API.post(\"/AddAPost\", data, resetHead());\n  },\n  getAllGoals: async goal => {\n    return await API.get(`/GetAllGoal`, resetHead());\n  },\n  getGoalDetails: async goalid => {\n    return await API.get(`/GetGoals/${goalid}`, resetHead());\n  },\n  getTasks: async goalid => {\n    return await API.get(`/GetTasksDB/${goalid}`, resetHead());\n  },\n  AddTaskDB: async data => {\n    return await API.post(\"/AddTaskDB\", data, resetHead());\n  },\n  getAllTasks: async tasks => {\n    console.log(tasks);\n    return await API.post(\"/getAllTasks\", tasks, resetHead());\n  }\n};\nAPI.interceptors.response.use(response => response, error => {\n  var _error$response, _error$response2, _error$response3;\n\n  console.error(error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n  if ((error === null || error === void 0 ? void 0 : (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data.name) !== \"JsonWebTokenError\") NotificationManager.error(String(error === null || error === void 0 ? void 0 : (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.data.message));else NotificationManager.error(\"Please signup or login\");\n});\nexport default actions;","map":{"version":3,"sources":["/Users/ashtynczapansky/Desktop/Ironhack/LittleLeaf/frontend/src/api/index.js"],"names":["axios","baseURL","NotificationContainer","NotificationManager","console","log","token","window","localStorage","getItem","t","substring","process","env","NODE_ENV","resetHead","headers","Authorization","API","create","withCredentials","actions","getAllMyEvents","get","getUser","signUp","user","res","post","setItem","data","logIn","logOut","removeItem","addapost","getAllGoals","goal","getGoalDetails","goalid","getTasks","AddTaskDB","getAllTasks","tasks","interceptors","response","use","error","name","String","message"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport baseURL from \"./config.js\";\nimport {\n  NotificationContainer,\n  NotificationManager,\n} from \"react-notifications\";\n\nconsole.log(baseURL);\n\nconst token = window.localStorage.getItem(\"token\");\nlet t = token ? token.substring(0, 15) : null;\n\nconsole.log(\"TOKEN\", t, \"NODE_ENV\", process.env.NODE_ENV);\n\nlet resetHead = () => {\n  return {\n    headers: {\n      Authorization: `Bearer ${window.localStorage.getItem(\"token\")}`,\n    },\n  };\n};\n\nconst API = axios.create({\n  withCredentials: true,\n  baseURL,\n  headers: { Authorization: `Bearer ${token}` },\n});\n\nconst actions = {\n  getAllMyEvents: async () => {\n    return await API.get(`/getAllEvents`, resetHead());\n  },\n\n  getUser: async () => {\n    return await API.get(`/user`, resetHead());\n  },\n  signUp: async (user) => {\n    let res = await API.post(\"/signup\", user, resetHead());\n    window.localStorage.setItem(\"token\", res?.data?.token);\n    return res;\n  },\n  logIn: async (user) => {\n    let res = await API.post(\"/login\", user, resetHead());\n    window.localStorage.setItem(\"token\", res?.data?.token);\n    return res;\n  },\n  logOut: async () => {\n    window.localStorage.removeItem(\"token\");\n    return await API.get(\"/logout\", resetHead());\n  },\n  addapost: async (data) => {\n    return await API.post(\"/AddAPost\", data, resetHead());\n  },\n  getAllGoals: async (goal) => {\n    return await API.get(`/GetAllGoal`, resetHead());\n  },\n  getGoalDetails: async (goalid) => {\n    return await API.get(`/GetGoals/${goalid}`, resetHead());\n  },\n  getTasks: async (goalid) => {\n    return await API.get(`/GetTasksDB/${goalid}`, resetHead());\n  },\n  AddTaskDB: async (data) => {\n    return await API.post(\"/AddTaskDB\", data, resetHead());\n  },\n  getAllTasks: async (tasks) => {\n    console.log(tasks);\n    return await API.post(\"/getAllTasks\", tasks, resetHead());\n  },\n};\n\nAPI.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    console.error(error?.response?.data);\n    if (error?.response?.data.name !== \"JsonWebTokenError\")\n      NotificationManager.error(String(error?.response?.data.message));\n    else NotificationManager.error(\"Please signup or login\");\n  }\n);\n\nexport default actions;\n"]},"metadata":{},"sourceType":"module"}