{"ast":null,"code":"var _jsxFileName = \"/Users/JadaWoody/Desktop/Ironhack/Project-4/LittleLeaf/frontend/src/components/AddAGoal.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Button from \"react-bootstrap/Button\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport Form from 'react-bootstrap/Form';\n\nfunction AddAGoal(props) {\n  const [name, setName] = useState(\"\");\n  const [start, setStart] = useState(\"\");\n  const [end, setEnd] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [status, setStatus] = useState(\"\"); //\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    let res = await axios.post(`http://localhost:5000/AddAGoal`, {\n      name,\n      start,\n      end,\n      description,\n      status\n    });\n    console.log(res);\n    console.log(props); // props.history.push(\"/movies\"); // Go back to whatever route you give inside the parentheses\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    class: \"addGoalForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"mx-auto\",\n    style: \"width: 200px;\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, \"Centered element\"), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, \"Goal Name:\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    placeholder: \"Name Your Goal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Form.Text, {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, \"Be descriptive! (:\")), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formStartDate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, \"Goal Start Date:\"), /*#__PURE__*/React.createElement(Form.Check, {\n    type: \"date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formEndDate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, \"Goal Due Date:\"), /*#__PURE__*/React.createElement(Form.Check, {\n    type: \"date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"form.ControlTextarea1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, \"Description:\"), /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"textarea\",\n    rows: \"3\",\n    placeholder: \"Tell us about your Goal! \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"form.ControlTextarea1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Control, {\n    as: \"select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, \"Set Status...\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, \"Incomplete\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, \"In Progress\"), \"\\\\\", /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, \"Complete\"))), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, \"Submit\")));\n}\n\nexport default AddAGoal;","map":{"version":3,"sources":["/Users/JadaWoody/Desktop/Ironhack/Project-4/LittleLeaf/frontend/src/components/AddAGoal.js"],"names":["React","useState","useEffect","axios","Button","Dropdown","Form","AddAGoal","props","name","setName","start","setStart","end","setEnd","description","setDescription","status","setStatus","handleSubmit","e","preventDefault","res","post","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Button from \"react-bootstrap/Button\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport Form from 'react-bootstrap/Form'\n\nfunction AddAGoal(props) {\n  const [name, setName] = useState(\"\");\n  const [start, setStart] = useState(\"\");\n  const [end, setEnd] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  //\n  async function handleSubmit(e) {\n    e.preventDefault();\n    let res = await axios.post(`http://localhost:5000/AddAGoal`, {\n      name,\n      start,\n      end,\n      description,\n      status,\n    });\n    console.log(res);\n    console.log(props);\n    // props.history.push(\"/movies\"); // Go back to whatever route you give inside the parentheses\n  }\n  return (\n    <div>\n      {/* <form onSubmit={handleSubmit} style={{ padding: \"80px\" }}>\n        <label for=\"Name\"> Name</label>\n        <input\n          onChange={(e) => setName(e.target.value)}\n          type=\"text\"\n          name=\"Name\"\n        />\n\n        <label for=\"Start Date\"> Start Date </label>\n        <input\n          onChange={(e) => setStart(e.target.value)}\n          type=\"text\"\n          name=\"Start\"\n        />\n\n        <label for=\"End Date\"> End Date</label>\n        <input\n          onChange={(e) => setEnd(e.target.value)}\n          type=\"text\"\n          name=\"End\"\n        />\n\n        <label for=\"Description\"> Description </label>\n        <input\n          onChange={(e) => setDescription(e.target.value)}\n          type=\"text\"\n          name=\"Description\"\n        /> */}\n        <Form class=\"addGoalForm\">\n        <div class=\"mx-auto\" style=\"width: 200px;\">\n  Centered element\n</div>\n          <Form.Group controlId=\"formName\">\n          <Form.Label>Goal Name:</Form.Label>\n          <Form.Control type=\"text\" placeholder=\"Name Your Goal\" />\n          <Form.Text className=\"text-muted\">\n              Be descriptive! (:\n          </Form.Text>\n          </Form.Group>\n\n          <Form.Group controlId=\"formStartDate\">\n          <Form.Label>Goal Start Date:</Form.Label>\n          <Form.Check type=\"date\"/>\n          </Form.Group>\n\n          <Form.Group controlId=\"formEndDate\">\n          <Form.Label>Goal Due Date:</Form.Label>\n          <Form.Check type=\"date\" />\n          </Form.Group>\n\n          <Form.Group controlId=\"form.ControlTextarea1\">\n          <Form.Label>Description:</Form.Label>\n          <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"Tell us about your Goal! \"/>\n          </Form.Group>\n\n          <Form.Group controlId=\"form.ControlTextarea1\">      \n          <Form.Control as=\"select\">\n            <option>Set Status...</option>\n            <option>Incomplete</option>\n            <option>In Progress</option>\\\n            <option>Complete</option>\n          </Form.Control>\n          </Form.Group>\n\n            <Button variant=\"primary\" type=\"submit\">\n              Submit\n            </Button>\n          </Form>\n\n        {/* <Dropdown>\n          <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n            Status\n          </Dropdown.Toggle>\n\n          <Dropdown.Menu>\n            <Dropdown.Item href=\"#/action-1\">Incomplete</Dropdown.Item>\n            <Dropdown.Item href=\"#/action-2\">In progress</Dropdown.Item>\n            <Dropdown.Item href=\"#/action-3\">Complete</Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n\n        <button>Add Goal</button> */}\n      {/* </form> */}\n    </div>\n  );\n}\n\nexport default AddAGoal;\n"]},"metadata":{},"sourceType":"module"}