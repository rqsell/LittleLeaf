{"ast":null,"code":"var _jsxFileName = \"/Users/ashtynczapansky/Desktop/Ironhack/LittleLeaf/frontend/src/components/profile/Login.js\";\nimport React, { useState, useEffect } from 'react';\nimport GoogleAuth from \"./components/auth/GoogleAuth.js\";\nimport GoogleAuthLogin from \"./components/auth/GoogleAuthLogin\";\nimport actions from \"./frontend/src/api\";\n\nfunction Login(props) {\n  let [user, setUser] = useState(null);\n  const [open, setOpen] = useState(false);\n  useEffect(() => {\n    async function getUser() {\n      let user = await actions.getUser();\n      console.log(\"user is\", user);\n      setUser(user === null || user === void 0 ? void 0 : user.data);\n    }\n\n    getUser();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }, \" this is the login page \"), /*#__PURE__*/React.createElement(\"div\", {\n    id: \"google-auth\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, !user && /*#__PURE__*/React.createElement(GoogleAuth, {\n    setUser: setUser,\n    class: \"googleAuth\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 27\n    }\n  }), !user && /*#__PURE__*/React.createElement(GoogleAuthLogin, {\n    setUser: setUser,\n    class: \"googleAuth\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 27\n    }\n  })));\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/ashtynczapansky/Desktop/Ironhack/LittleLeaf/frontend/src/components/profile/Login.js"],"names":["React","useState","useEffect","GoogleAuth","GoogleAuthLogin","actions","Login","props","user","setUser","open","setOpen","getUser","console","log","data"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,iCAAvB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,OAAP,MAAoB,oBAApB;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAClB,MAAI,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,IAAD,CAA9B;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,KAAD,CAAhC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeU,OAAf,GAAyB;AACrB,UAAIJ,IAAI,GAAG,MAAMH,OAAO,CAACO,OAAR,EAAjB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBN,IAAvB;AACAC,MAAAA,OAAO,CAACD,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEO,IAAP,CAAP;AACH;;AACDH,IAAAA,OAAO;AACV,GAPQ,EAON,EAPM,CAAT;AAQA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADJ,eAGI;AAAK,IAAA,EAAE,EAAC,aAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,CAACJ,IAAD,iBAAS,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAEC,OAArB;AAA8B,IAAA,KAAK,EAAC,YAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADd,EAEK,CAACD,IAAD,iBAAS,oBAAC,eAAD;AAAiB,IAAA,OAAO,EAAEC,OAA1B;AAAmC,IAAA,KAAK,EAAC,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFd,CAHJ,CADJ;AAUH;;AAED,eAAeH,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport GoogleAuth from \"./components/auth/GoogleAuth.js\";\nimport GoogleAuthLogin from \"./components/auth/GoogleAuthLogin\";\nimport actions from \"./frontend/src/api\";\n\nfunction Login(props) {\n    let [user, setUser] = useState(null);\n    const [open, setOpen] = useState(false);\n    useEffect(() => {\n        async function getUser() {\n            let user = await actions.getUser();\n            console.log(\"user is\", user);\n            setUser(user?.data);\n        }\n        getUser();\n    }, []);\n    return (\n        <div>\n            <p> this is the login page </p>\n\n            <div id=\"google-auth\">\n                {!user && <GoogleAuth setUser={setUser} class=\"googleAuth\" />}\n                {!user && <GoogleAuthLogin setUser={setUser} class=\"googleAuth\" />}\n            </div>\n        </div>\n    );\n}\n\nexport default Login;\n\n"]},"metadata":{},"sourceType":"module"}