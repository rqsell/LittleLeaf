{"ast":null,"code":"var _jsxFileName = \"/Users/rebeccasell/Documents/project-4/LittleLeaf/frontend/src/components/AddAGoal.js\";\nimport React, { useState } from \"react\"; // import axios from \"axios\";\n// import Button from \"react-bootstrap/Button\";\n\nimport Dropdown from \"react-bootstrap/Dropdown\"; // import Form from 'react-bootstrap/Form'\n\nimport { Link } from \"react-router-dom\";\nimport actions from \"../api\";\nimport SeeGoal from \"./SeeGoal\";\n\nfunction AddAGoal(props) {\n  const [name, setName] = useState(\"\");\n  const [start, setStart] = useState(\"\");\n  const [end, setEnd] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [open, setOpen] = useState(false);\n\n  async function handleSubmit(e) {\n    e.preventDefault(); // let res = await axios.post(`http://localhost:5000/api/AddAGoal`, {\n\n    console.log(status);\n    let res = await actions.addapost({\n      name,\n      start,\n      end,\n      description,\n      status\n    });\n    console.log(res); // console.log(props);\n    // props.history.push(\"/movies\"); // Go back to whatever route you give inside the parentheses\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"hamburgerMenu\",\n    id: open ? \"clickedmenu\" : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"x\",\n    onClick: () => setOpen(!open),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, \"X\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, \"Home\")), /*#__PURE__*/React.createElement(Link, {\n    to: \"/AddAGoal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, \"Add a Goal\")), /*#__PURE__*/React.createElement(Link, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, \"Log In\")), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, \"About Us\"), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, \"Profile\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"addAGoalDiv\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    class: \"goalsintro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, \"Welcome to your Goals page!\"), /*#__PURE__*/React.createElement(\"img\", {\n    src: \"./images/Copy of Little Leaf Big Tree Logo.png\",\n    alt: \"our logo\",\n    id: open ? \"clickedlogo\" : \"\",\n    class: \"logo2\",\n    onClick: () => setOpen(!open),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    class: \"goalsBio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, \"Each goal you add and complete will take you closer to success! Each goal may be stand-alone, or may include several related tasks!\", \" \"), /*#__PURE__*/React.createElement(SeeGoal, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    class: \"goalsintro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, \"Add a New Goal to Your List!\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    style: {\n      padding: \"80px\"\n    },\n    class: \"vanillaForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, \"Goal Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: e => setName(e.target.value),\n    type: \"text\",\n    name: \"Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    for: \"Start Date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, \"Goal Start Date \"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: e => setStart(e.target.value),\n    type: \"text\",\n    name: \"Start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    for: \"End Date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, \"Goal Due Date\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: e => setEnd(e.target.value),\n    type: \"text\",\n    name: \"End\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    for: \"Description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: e => setDescription(e.target.value),\n    type: \"text\",\n    name: \"Description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"status\",\n    onChange: e => setStatus(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, \"Set Status...\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, \"Incomplete\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, \"In Progress\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, \"Complete\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"addGoalButton\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, \"Add Goal\"))));\n}\n\n{\n  /* <Form class=\"addGoalForm\">\n        \n          <Form.Group controlId=\"formName\">\n          <Form.Label>Goal Name:</Form.Label>\n          <Form.Control type=\"text\" placeholder=\"Name Your Goal\" onChange={e.target.value} />\n          <Form.Text className=\"text-muted\">\n              Be descriptive! (:\n          </Form.Text>\n          </Form.Group>\n           <Form.Group controlId=\"formStartDate\">\n          <Form.Control type=\"date\" onChange={e.target.value} />\n          <Form.Label>Goal Start Date:</Form.Label>\n          <Form.Check type=\"date\"/>\n          </Form.Group>\n           <Form.Group controlId=\"formEndDate\">\n          <Form.Control type=\"date\" onChange={e.target.value} />\n          <Form.Label>Goal Due Date:</Form.Label>\n          <Form.Check type=\"date\" />\n          </Form.Group>\n           <Form.Group controlId=\"form.ControlTextarea1\">\n          <Form.Control type=\"text\" onChange={e.target.value} />\n          <Form.Label>Description:</Form.Label>\n          <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"Tell us about your Goal! \"/>\n          </Form.Group>\n           <Form.Group controlId=\"form.ControlTextarea1\">      \n          <Form.Control as=\"select\" onChange>\n            <option>Set Status...</option>\n            <option>Incomplete</option>\n            <option>In Progress</option>\\\n            <option>Complete</option>\n          </Form.Control>\n          </Form.Group>\n             <Button variant=\"primary\" type=\"submit\">\n              Submit\n            </Button>\n          </Form> */\n}\n{\n  /* <Dropdown>\n          <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n            Status\n          </Dropdown.Toggle>\n          <Dropdown.Menu onChange={e.target.value}>\n            <Dropdown.Item href=\"#/action-1\">Incomplete</Dropdown.Item>\n            <Dropdown.Item href=\"#/action-2\">In progress</Dropdown.Item>\n            <Dropdown.Item href=\"#/action-3\">Complete</Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown> */\n}\nexport default AddAGoal;","map":{"version":3,"sources":["/Users/rebeccasell/Documents/project-4/LittleLeaf/frontend/src/components/AddAGoal.js"],"names":["React","useState","Dropdown","Link","actions","SeeGoal","AddAGoal","props","name","setName","start","setStart","end","setEnd","description","setDescription","status","setStatus","open","setOpen","handleSubmit","e","preventDefault","console","log","res","addapost","padding","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n// import axios from \"axios\";\n// import Button from \"react-bootstrap/Button\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\n// import Form from 'react-bootstrap/Form'\nimport { Link } from \"react-router-dom\";\nimport actions from \"../api\";\nimport SeeGoal from \"./SeeGoal\";\n\nfunction AddAGoal(props) {\n  const [name, setName] = useState(\"\");\n  const [start, setStart] = useState(\"\");\n  const [end, setEnd] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [open, setOpen] = useState(false);\n  async function handleSubmit(e) {\n    e.preventDefault();\n    // let res = await axios.post(`http://localhost:5000/api/AddAGoal`, {\n    console.log(status);\n    let res = await actions.addapost({\n      name,\n      start,\n      end,\n      description,\n      status,\n    });\n    console.log(res);\n    // console.log(props);\n    // props.history.push(\"/movies\"); // Go back to whatever route you give inside the parentheses\n  }\n\n  return (\n    <div>\n      <ul className=\"hamburgerMenu\" id={open ? \"clickedmenu\" : \"\"}>\n        {/* <Menu> */}\n        <div className=\"x\" onClick={() => setOpen(!open)}>\n          X\n        </div>\n        <Link to=\"/\">\n          <li>Home</li>\n        </Link>\n        <Link to=\"/AddAGoal\">\n          <li>Add a Goal</li>\n        </Link>\n        <Link>\n          <li>Log In</li>\n        </Link>\n        <li>About Us</li>\n        <li>Profile</li>\n        {/* </Menu> */}\n      </ul>\n      {/* ) : null} */}\n\n      <div className=\"addAGoalDiv\">\n        <h4 class=\"goalsintro\">Welcome to your Goals page!</h4>\n        <img\n          src=\"./images/Copy of Little Leaf Big Tree Logo.png\"\n          alt=\"our logo\"\n          id={open ? \"clickedlogo\" : \"\"}\n          class=\"logo2\"\n          onClick={() => setOpen(!open)}\n        />\n        <p class=\"goalsBio\">\n          Each goal you add and complete will take you closer to success! Each\n          goal may be stand-alone, or may include several related tasks!{\" \"}\n        </p>\n        <SeeGoal />\n        <br></br>\n        <h4 class=\"goalsintro\">Add a New Goal to Your List!</h4>\n        <form\n          onSubmit={handleSubmit}\n          style={{ padding: \"80px\" }}\n          class=\"vanillaForm\"\n        >\n          <label for=\"Name\">Goal Name</label>\n          <input\n            onChange={(e) => setName(e.target.value)}\n            type=\"text\"\n            name=\"Name\"\n          />\n\n          <label for=\"Start Date\">Goal Start Date </label>\n          <input\n            onChange={(e) => setStart(e.target.value)}\n            type=\"text\"\n            name=\"Start\"\n          />\n\n          <label for=\"End Date\">Goal Due Date</label>\n          <input\n            onChange={(e) => setEnd(e.target.value)}\n            type=\"text\"\n            name=\"End\"\n          />\n\n          <label for=\"Description\">Description</label>\n          <input\n            onChange={(e) => setDescription(e.target.value)}\n            type=\"text\"\n            name=\"Description\"\n          />\n          <br />\n          {/* <label>Set Status</label> */}\n          <select name=\"status\" onChange={(e) => setStatus(e.target.value)}>\n            <option>Set Status...</option>\n            <option>Incomplete</option>\n            <option>In Progress</option>\n            <option>Complete</option>\n          </select>\n          <br />\n          <button id=\"addGoalButton\">Add Goal</button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\n{\n  /* <Form class=\"addGoalForm\">\n        \n          <Form.Group controlId=\"formName\">\n          <Form.Label>Goal Name:</Form.Label>\n          <Form.Control type=\"text\" placeholder=\"Name Your Goal\" onChange={e.target.value} />\n          <Form.Text className=\"text-muted\">\n              Be descriptive! (:\n          </Form.Text>\n          </Form.Group>\n\n          <Form.Group controlId=\"formStartDate\">\n          <Form.Control type=\"date\" onChange={e.target.value} />\n          <Form.Label>Goal Start Date:</Form.Label>\n          <Form.Check type=\"date\"/>\n          </Form.Group>\n\n          <Form.Group controlId=\"formEndDate\">\n          <Form.Control type=\"date\" onChange={e.target.value} />\n          <Form.Label>Goal Due Date:</Form.Label>\n          <Form.Check type=\"date\" />\n          </Form.Group>\n\n          <Form.Group controlId=\"form.ControlTextarea1\">\n          <Form.Control type=\"text\" onChange={e.target.value} />\n          <Form.Label>Description:</Form.Label>\n          <Form.Control as=\"textarea\" rows=\"3\" placeholder=\"Tell us about your Goal! \"/>\n          </Form.Group>\n\n          <Form.Group controlId=\"form.ControlTextarea1\">      \n          <Form.Control as=\"select\" onChange>\n            <option>Set Status...</option>\n            <option>Incomplete</option>\n            <option>In Progress</option>\\\n            <option>Complete</option>\n          </Form.Control>\n          </Form.Group>\n\n            <Button variant=\"primary\" type=\"submit\">\n              Submit\n            </Button>\n          </Form> */\n}\n\n{\n  /* <Dropdown>\n          <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n            Status\n          </Dropdown.Toggle>\n          <Dropdown.Menu onChange={e.target.value}>\n            <Dropdown.Item href=\"#/action-1\">Incomplete</Dropdown.Item>\n            <Dropdown.Item href=\"#/action-2\">In progress</Dropdown.Item>\n            <Dropdown.Item href=\"#/action-3\">Complete</Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown> */\n}\n\nexport default AddAGoal;\n"]},"metadata":{},"sourceType":"module"}