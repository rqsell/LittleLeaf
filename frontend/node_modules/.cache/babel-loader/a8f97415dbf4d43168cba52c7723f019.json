{"ast":null,"code":"var _jsxFileName = \"/Users/ashtynczapansky/Desktop/Ironhack/LittleLeaf/frontend/src/components/AddATask.js\";\nimport React, { useState } from \"react\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport actions from \"../api\";\n\nfunction AddATask(props) {\n  const [name, setName] = useState(\"\");\n  const [start, setStart] = useState(\"\");\n  const [end, setEnd] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  console.log(props);\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    console.log(status);\n    let res = await actions.AddTaskDB({\n      name,\n      start,\n      end,\n      description,\n      goalId: props.match.params.goalid,\n      status\n    });\n    console.log(res);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    style: {\n      padding: \"80px\"\n    },\n    class: \"vanillaForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, \"Task Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: e => setName(e.target.value),\n    type: \"text\",\n    name: \"Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    for: \"Start Date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, \"Task Start Date \"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: e => setStart(e.target.value),\n    type: \"date\",\n    name: \"Start\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    for: \"End Date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, \"Task Due Date\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: e => setEnd(e.target.value),\n    type: \"date\",\n    name: \"End\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    for: \"Description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: e => setDescription(e.target.value),\n    type: \"text\",\n    name: \"Description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"status\",\n    onChange: e => setStatus(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, \"Set Status...\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, \"Incomplete\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, \"In Progress\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, \"Complete\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    id: \"addGoalButton\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, \"Add Task\")));\n}\n\nexport default AddATask;","map":{"version":3,"sources":["/Users/ashtynczapansky/Desktop/Ironhack/LittleLeaf/frontend/src/components/AddATask.js"],"names":["React","useState","Dropdown","actions","AddATask","props","name","setName","start","setStart","end","setEnd","description","setDescription","status","setStatus","console","log","handleSubmit","e","preventDefault","res","AddTaskDB","goalId","match","params","goalid","padding","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport actions from \"../api\";\n\nfunction AddATask(props) {\n  const [name, setName] = useState(\"\");\n  const [start, setStart] = useState(\"\");\n  const [end, setEnd] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  console.log(props);\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    console.log(status);\n\n    let res = await actions.AddTaskDB({\n      name,\n      start,\n      end,\n      description,\n      goalId: props.match.params.goalid,\n      status,\n    });\n    console.log(res);\n  }\n  return (\n    <div>\n      <form\n        onSubmit={handleSubmit}\n        style={{ padding: \"80px\" }}\n        class=\"vanillaForm\"\n      >\n        <label for=\"Name\">Task Name</label>\n        <input\n          onChange={(e) => setName(e.target.value)}\n          type=\"text\"\n          name=\"Name\"\n        />\n\n        <label for=\"Start Date\">Task Start Date </label>\n        <input\n          onChange={(e) => setStart(e.target.value)}\n          type=\"date\"\n          name=\"Start\"\n        />\n\n        <label for=\"End Date\">Task Due Date</label>\n        <input\n          onChange={(e) => setEnd(e.target.value)}\n          type=\"date\"\n          name=\"End\"\n        />\n\n        <label for=\"Description\">Description</label>\n        <input\n          onChange={(e) => setDescription(e.target.value)}\n          type=\"text\"\n          name=\"Description\"\n        />\n        <br />\n        {/* <label>Set Status</label> */}\n        <select name=\"status\" onChange={(e) => setStatus(e.target.value)}>\n          <option>Set Status...</option>\n          <option>Incomplete</option>\n          <option>In Progress</option>\n          <option>Complete</option>\n        </select>\n        <br />\n        <button id=\"addGoalButton\">Add Task</button>\n      </form>\n    </div>\n  );\n}\n\nexport default AddATask;\n"]},"metadata":{},"sourceType":"module"}